package com.door.configuration;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.Ordered;
import org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;
import org.springframework.security.config.web.server.ServerHttpSecurity;
import org.springframework.security.web.server.SecurityWebFilterChain;

import com.door.auth.ERol;
import com.door.security.ServerAuthenticationEntryPointImpl;
import com.door.security.WebFilterImpl;

@Configuration
@EnableWebFluxSecurity
public class HelloWebfluxSecurityConfig implements Ordered{
	
	@Autowired
	ServerAuthenticationEntryPointImpl authFilter;
	
	@Autowired
	WebFilterImpl webFilterImpl;
	
    @Bean
    public SecurityWebFilterChain springSecurityFilterChain(ServerHttpSecurity http) {
    	System.out.println("Spring Security Filter Chain");

        http.csrf().disable()
        .addFilterBefore(webFilterImpl, null)
        .exceptionHandling().authenticationEntryPoint(authFilter)
        .and()
        .authorizeExchange()
        .pathMatchers(Routes.PUBLIC_ROUTES).permitAll() //public routes
        .pathMatchers(Routes.USER_ROUTES).hasRole(ERol.ROLE_ADMIN.toString());
        /*.authorizeExchange(exchanges -> exchanges
        		.pathMatchers(PUBLIC_ROUTES).permitAll()
        		//.anyExchange().permitAll()
            );*/
        return http.build();
    }

	@Override
	public int getOrder() {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
