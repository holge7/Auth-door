package com.door.security;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.server.ServerWebExchange;
import org.springframework.web.server.WebFilter;
import org.springframework.web.server.WebFilterChain;

import com.door.jwt.JwtUtils;

import reactor.core.publisher.Mono;

@Configuration
public class LogginFilter implements WebFilter{
    Log log = LogFactory.getLog(getClass());
    
    JwtUtils jwtUtils;
    
    public LogginFilter(JwtUtils jwtUtils) {
    	this.jwtUtils = jwtUtils;
    }

	@Override
	public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
		String requestHeaders = exchange.getRequest().getHeaders().toString();
		System.out.println("================");
		System.out.println(exchange.getRequest().getHeaders().get("Authorization").get(0));
		System.out.println("Loggin Filter");
		System.out.println("================");
		return chain.filter(exchange);
	}
	
	public String parseJwt(ServerWebExchange exchange) {
		//Try to get Authorization Header
		try {
			String jwt = exchange.getRequest().getHeaders().get("Authorization").get(0);
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		return "";
	}
	
}